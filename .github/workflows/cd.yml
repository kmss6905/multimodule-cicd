name: Api Deploy
run-name: Deploy :${{ github.run_number }}
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'api/**'
      - '.github/workflows/**'
env:
  DOCKER_IMAGE: hellodocker
  ECR_REPOSITORY: 276943215323.dkr.ecr.ap-northeast-2.amazonaws.com

jobs:
  TestAndBuild:
    name: Test Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Setup Java 17 - temurin
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle & Cache Gradle packages
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

      - name: Test And Build
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD)
          
          if echo "$changed_files" | grep -q '^admin/'; then
          echo "build admin"
          ./gradlew admin:clean admin:test admin:build
          fi
          
          if echo "$changed_files" | grep -q '^api/'; then
          echo "build api"
          ./gradlew api:clean api:test api:build
          fi

  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hellodocker
        run: |
          docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY -f api.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY"
          echo "::set-output name=ecr_registry::$ECR_REGISTRY"

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ needs.docker-build-and-push.outputs.ecr_registry }}
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ needs.docker-build-and-push.outputs.ecr_registry }}
            docker compose pull && docker compose up -d